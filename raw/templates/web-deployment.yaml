apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: web
  name: web
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: web
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: web
    spec:
      containers:
      - env:
        - name: ALLOWED_HOSTS
          value: "{{ .Values.ALLOWED_HOSTS }}"
        - name: DEBUG
          value: "0"
        - name: INITIAL_ADMIN_PASSWORD
          value: "{{ .Values.INITIAL_ADMIN_PASSWORD }}"
        - name: INITIAL_USER_PASSWORD
          value: "{{ .Values.INITIAL_USER_PASSWORD }}"
        - name: LDAP_BASE_DN
          value: "{{ .Values.LDAP_BASE_DN }}"
        - name: LDAP_BIND_DN
          value: "{{ .Values.LDAP_BIND_DN }}"
        - name: LDAP_BIND_PASSWORD
          value: "{{ .Values.LDAP_BIND_PASSWORD }}"
        - name: LDAP_CERTIFICATE_PATH
          value: "{{ .Values.LDAP_CERTIFICATE_PATH }}"
        - name: LDAP_CERTIFICATE
          value: "{{ toYaml .Values.LDAP_CERTIFICATE }}"
        - name: LDAP_GROUP_DN
          value: "{{ .Values.LDAP_GROUP_DN }}"
        - name: LDAP_IGNORE_CERT
          value: "{{ .Values.LDAP_IGNORE_CERT }}"
        - name: LDAP_SERVER_URI
          value: "{{ .Values.LDAP_SERVER_URI }}"
        - name: LDAP_START_TLS
          value: "{{ .Values.LDAP_START_TLS }}"
        - name: LDAP_SUPERUSER_GROUP_DN
          value: "{{ .Values.LDAP_SUPERUSER_GROUP_DN }}"
        - name: LDAP_WITH_LOCAL_AUTH
          value: "{{ .Values.LDAP_WITH_LOCAL_AUTH }}"
        - name: MYSQL_ROOT_PASSWORD
          value: "{{ .Values.MYSQL_ROOT_PASSWORD }}"
        - name: SECRET_KEY
          value: "{{ .Values.SECRET_KEY }}"
        image: swisscomcloud/esc-vm-scheduler-web:latest
        imagePullPolicy: "IfNotPresent"
        name: web
        ports:
        - containerPort: 80
        resources: {}
        volumeMounts:
        - mountPath: /app/staticfiles
          name: static-volume
        - mountPath: /app/certs/certfile.pem
          name: web-claim1
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: static-volume
        persistentVolumeClaim:
          claimName: static-volume
      - name: web-claim1
        persistentVolumeClaim:
          claimName: web-claim1
status: {}
